var path = __varg(0);
var str = std.filesystem.read(path);

var lns = std.string.explode(str, "\n");
if(lns[$] == "") unset lns[$];
std.io.putfln("Updating: $1 ($2 lines)", path, countof lns);

var pcre_sw = std.string.PCRE('^( +)(switch\b.*) \{$');
var stack_sw = [];
var pcre_cl = std.string.PCRE('^( +)(case|default)\b([^:]*:) \{$');
var stack_cl = [];

var mat;
str = "";

for(each k: ln -> lns) {
  if(ln == "") {
    str += "\n";
    continue;
  }

  // indent
  str += "  " * countof stack_cl;

  if((mat = pcre_sw.match(ln)) != null) {
    // open switch
    str += mat[1] + mat[2] + "\n";
    stack_sw[$] = mat[1];
    str += "  " * countof stack_sw;
    str += mat[1] + "{\n";
  }
  else if((mat = pcre_cl.match(ln)) != null) {
    // open case/default
    str += mat[1] + mat[2] + mat[3] + "\n";
    stack_cl[$] = mat[1];
    str += "  " * countof stack_cl;
    str += mat[1] + "{\n";
  }
  else {
    // copy
    str += ln;
    str += "\n";
  }

  if(stack_sw[$] != null && ln == stack_sw[$] + '}') {
    // close switch
    unset stack_sw[$];
  }
  else if(stack_cl[$] != null && ln == stack_cl[$] + '}') {
    // close case/default
    unset stack_cl[$];
  }
}

std.filesystem.write(path, str);
